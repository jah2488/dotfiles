#!/usr/bin/env bash
# vim: set ft=ruby:

# This file executes as a bash script, which turns around and executes Ruby via
# the line below. The -x argument to Ruby makes it discard everything before
# the second "!ruby" shebang. This allows us to work on Linux, where the
# shebang can only have one argument so we can't directly say
# "#!/usr/bin/env ruby --disable-gems". Thanks for that, Linux.
#
# If this seems confusing, don't worry. You can treat it as a normal Ruby file
# starting with the "!ruby" shebang below.

exec /usr/bin/env ruby --disable-gems -x "$0" $*
#!ruby


def not_enough_args; puts "No APP_NAME supplied", "Usage: \n  open-app APP_NAME (required)" end
def open_app(name)
  #TODO: Search inside matching folders
  `open /Applications/#{name}.app`
end

if ARGV[0] == '--auto-complete'
  apps = Dir['/Applications/*'].map { |x| x[14..-1].gsub('.app', '') }
  completions = apps.grep(/^#{Regexp.escape((ARGV[1]|| ''))}/i)
  puts completions
else
  if ARGV.length < 1
    not_enough_args
  else
    open_app(ARGV[0])
  end
end



